// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/image/repository.go

// Package mockgen is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	image "github.com/nmarsollier/imagego/internal/image"
)

// MockImageRepository is a mock of ImageRepository interface.
type MockImageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockImageRepositoryMockRecorder
}

// MockImageRepositoryMockRecorder is the mock recorder for MockImageRepository.
type MockImageRepositoryMockRecorder struct {
	mock *MockImageRepository
}

// NewMockImageRepository creates a new mock instance.
func NewMockImageRepository(ctrl *gomock.Controller) *MockImageRepository {
	mock := &MockImageRepository{ctrl: ctrl}
	mock.recorder = &MockImageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageRepository) EXPECT() *MockImageRepositoryMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockImageRepository) Find(imageID string) (*image.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", imageID)
	ret0, _ := ret[0].(*image.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockImageRepositoryMockRecorder) Find(imageID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockImageRepository)(nil).Find), imageID)
}

// Insert mocks base method.
func (m *MockImageRepository) Insert(image *image.Image) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", image)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockImageRepositoryMockRecorder) Insert(image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockImageRepository)(nil).Insert), image)
}

// ValidateSchema mocks base method.
func (m *MockImageRepository) ValidateSchema(image *image.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateSchema", image)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateSchema indicates an expected call of ValidateSchema.
func (mr *MockImageRepositoryMockRecorder) ValidateSchema(image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateSchema", reflect.TypeOf((*MockImageRepository)(nil).ValidateSchema), image)
}
