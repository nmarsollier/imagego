// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/rabbit/consume_logout.go

// Package mockgen is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConsumeLogoutService is a mock of ConsumeLogoutService interface.
type MockConsumeLogoutService struct {
	ctrl     *gomock.Controller
	recorder *MockConsumeLogoutServiceMockRecorder
}

// MockConsumeLogoutServiceMockRecorder is the mock recorder for MockConsumeLogoutService.
type MockConsumeLogoutServiceMockRecorder struct {
	mock *MockConsumeLogoutService
}

// NewMockConsumeLogoutService creates a new mock instance.
func NewMockConsumeLogoutService(ctrl *gomock.Controller) *MockConsumeLogoutService {
	mock := &MockConsumeLogoutService{ctrl: ctrl}
	mock.recorder = &MockConsumeLogoutServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConsumeLogoutService) EXPECT() *MockConsumeLogoutServiceMockRecorder {
	return m.recorder
}

// Init mocks base method.
func (m *MockConsumeLogoutService) Init() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Init")
}

// Init indicates an expected call of Init.
func (mr *MockConsumeLogoutServiceMockRecorder) Init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockConsumeLogoutService)(nil).Init))
}
