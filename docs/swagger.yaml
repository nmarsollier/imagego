basePath: /v1
definitions:
  apperr.ValidationErr:
    properties:
      messages:
        items:
          $ref: '#/definitions/apperr.errField'
        type: array
    type: object
  apperr.errField:
    properties:
      message:
        type: string
      path:
        type: string
    type: object
  engine.ErrorData:
    properties:
      error:
        type: string
    type: object
  image.Image:
    properties:
      id:
        type: string
      image:
        type: string
    required:
    - id
    - image
    type: object
  rabbit.message:
    properties:
      message:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbklEIjoiNjZiNjBlYzhlMGYzYzY4OTUzMzJlOWNmIiwidXNlcklEIjoiNjZhZmQ3ZWU4YTBhYjRjZjQ0YTQ3NDcyIn0.who7upBctOpmlVmTvOgH1qFKOHKXmuQCkEjMV3qeySg
        type: string
      type:
        example: logout
        type: string
    type: object
  routes.NewImageResponse:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  routes.NewRequest:
    properties:
      image:
        type: string
    required:
    - image
    type: object
host: localhost:3001
info:
  contact:
    email: nmarsollier@gmail.com
    name: Nestor Marsollier
  description: Microservicio de Imagenes.
  title: ImageGo
  version: "1.0"
paths:
  /rabbit/logout:
    get:
      consumes:
      - application/json
      description: Escucha de mensajes logout desde auth.
      parameters:
      - description: Estructura general del mensage
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rabbit.message'
      produces:
      - application/json
      responses: {}
      summary: Mensage Rabbit
      tags:
      - Rabbit
  /v1/image:
    post:
      consumes:
      - application/json
      description: Agrega una nueva imagen al servidor.
      parameters:
      - description: Imagen en base64
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/routes.NewRequest'
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Imagen
          schema:
            $ref: '#/definitions/routes.NewImageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperr.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/engine.ErrorData'
      summary: Guardar imagen
      tags:
      - Imagen
  /v1/image/:imageID:
    get:
      consumes:
      - application/json
      description: Obtiene una imagen del servidor en formato base64
      parameters:
      - description: '[160|320|640|800|1024|1200]'
        in: path
        name: Size
        required: true
        type: string
      - description: ID de la imagen
        in: path
        name: imageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Informacion de la Imagen
          schema:
            $ref: '#/definitions/image.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperr.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/engine.ErrorData'
      summary: Obtener imagen
      tags:
      - Imagen
  /v1/image/:imageID/jpeg:
    get:
      consumes:
      - application/json
      description: Obtiene una imagen del servidor en formato jpeg.
      parameters:
      - description: '[160|320|640|800|1024|1200]'
        in: path
        name: Size
        required: true
        type: string
      - description: ID de la imagen
        in: path
        name: imageID
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: Imagen
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperr.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/engine.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/engine.ErrorData'
      summary: Obtener jpeg
      tags:
      - Imagen
swagger: "2.0"
